#cp /etc/services .
copiar o arquivo services para dentro do diretorio corrente

#cat services 
mostrar o conteudo de services

#grep http services 
localizar o texto "http" dentro do arquivo services

#grep https services 
localizar o texto "https" dentro do arquivo services

#grep -i http services 
localizar o texto "http" dentro do arquivo services, mas com ignore case

#cp /etc/passwd .
copiar o arquivo passwd para o diretorio corrente
arquivo com os dados dos usuarios locais do sistema

#grep adriano *
localizar o texto "adriano" nos dois arquivos presentes no diretorio corrente


#grep -l adriano *
mostra em qual arquivo o texto "adriano" está localizado

#grep -L adriano *
mostra os arquivos que não contem o texto "adriano"

#mkdir teste
criando a pasta teste

#cd teste/
entra na pasta teste

#cp ../services services2
copia o arquivo service da pasta anterior para a pasta teste com o nome de services2

#cd ..
volta a pasta filtrando_conteudo

#grep HTTP services 
localiza a string "HTTP" no arquivo services

#grep HTTP *
localiza "HTTP" em todos os arquivos, mas não consegue avançar na pasta teste para fazer a busca

#grep -r HTTP *
usa recursividade para localizar a string "HTTP" na pasta corrente e na pasta interna


#grep -rl HTTP *
usa recursividade para localizar a string "HTTP" na pasta corrente e na pasta interna chamada teste
o parametro l faz a listagem dos arquivos


#more services
paginação de arquivos linha a linha

#less services
paginação pagina a pagina com a tecla espaço

#tail /etc/passwd
mostra a ultimas 10 linhas de um arquivo por padrão

#head /etc/passwd
mostra a 10 primeiras linhas de um arquivo por padrão

#tail -n 3 /etc/passwd
mostrar as ultimas 3 linhas do arquivo


#ls -l /etc/*.conf
listar todos os arquivos que tem a extensão .conf na pasta etc

#find / -name *.conf
procurar a partir do diretorio raiz os arquivos que terminam em .conf


#sudo find /etc -maxdepth 2 -name *.conf
procurar a partir de /etc os arquivos que terminam em .conf, mas ele não avança mais de 2 diretorios 
na busca

#sudo find / -atime -2
#sudo find / -amin -2
Verfifcar se exitem arquivos editados ha 2 anos e ha 2 minutos

#sudo find / -size +1000M
localiza os arquivos com mais de 100 MB

#sudo find / -size +3G
localiza os arquivos com mais de 3G

#grep ssh services > listagem
redireciona a saida do comando grep para o arquivo listagem

#grep 3389 services >> listagem
redireciona a saida do comando grep para o arquivo listagem, mas não o sobrescreve.

#cat /etc/passwd | grep adriano
redireciona a saida do comando cat para o comando grep e mostra o resultado na tela

#cat /etc/passwd | grep adriano >> listagem
redireciona a saida do comando cat para o comando grep e o resultado é acrescentado ao arquivo listagem

#cat listagem  | sort > listagem2
redireciona o conteudo do comando cat para o comando sort. Grava o resultado no arquivo listagem2

#tail -n 5 /var/log/syslog | grep systemd > log5
pegando as ultimas 5 linhas do arquivo de log do sistema, rediredionando a saida para o comando grep
com a query "systemd" e gravando no arquivo log5

#cat syslog | grep systemd | wc -l
mostrando o conteudo do syslog, capturando esse texto e filtrando com grep a string "systemd"
e por ultimo, pegando esse filtro e contando quantas linhas tem com o comando wc -l

#cat syslog | grep systemd > /opt/cybersecurity/onboard_linux/filtrando_conteudo/extraindo_conteudos/logs
mesmo comando, mas extraindo para um arquivo de logs

#cat logs | cut -d " " -f7-
captura o texto de logs, joga para o cut com o delimitador " " e pega a ultima faixa do log -f7, e o 
tracinho indica que deve ir atpe o fim do arquivo

#cat logs | cut -d " " -f1-4,7- > logs1
captura a texto de logs, joga para o cut com o delimitador " " començando da primeira coluna até a 4
depois a 7 até o final do arquivo e grava isso em logs1

#expressoes regulares

#sudo apt install wamerican
instalar o pacote wamerican com varias palavras
#find /usr -name *american
localizar onde o pacote foi instalado
#cp /usr/share/dict/american-english  .
copia o arquivo american-english para o diretorio atual
#cat american-english | grep computer
filtra a palavra computer no arquivo american-english


#cat american-english | grep -E "^computer"
filtra apenas as palavras que começam com computer

#cat american-english | grep -E "computer$"
filtra apenas as palavras que terminam com computer

#cat american-english | grep -E "^computer$"
filtra apenas as palavras que começam e terminam com computer

#grep -i ^computer$ american-english
mesmo comando mas que não precisa do cat

#echo "Computer" >> american-english
colocar uma nova string, nesse caso "Computer" para dentro do arquivo

#grep -i computer american-english
podemos selecionar "computer" ignorando o case sensitive no arquivo american-english

#cat american-english | grep -iE "^computer$"
usando a expressão regular para selecionar palavras que começam e terminam com "computer"
acrescentando o -i para ignorar o case sensitive
resultando em:
#computer
#Computer

#egrep -i "^computer$" american-english
egrep é a mesma coisa que o grep -E

#cat american-english | grep -iE "^smartphone$|^computer$"
Buscar no arquivo american-english ignorando case as palavras que começam com smartphone 
e terminam com smartphone e a mesma coisa para computer


#egrep "^.oot" american-english 
filtrando as palavras que começam com "oot", mas a primeira letra variável com .

#egrep "^.oot$" american-english
filtrando as palavras que começam e terminam com oot, mas com a primeira letra variável com .

#egrep "^.oot..$" american-english 
filtrando as palavras que começam com oot com a primeira letra variável, e pode ter os dois ultimos 
caracteres variaveis

#egrep "^[flmr]oot..$" american-english
filtrando as palavras que começam com as consoantes f ou l ou m ou r
seguido da string "oot" terminando com qualquer caracter em duas posições

#egrep "^[l-n]oot..$" american-english
filtrando com um range de l até n para a primeira letra, seguido de "oot", com o final variando 
com dois caracteres quaisquer



